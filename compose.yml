services:
  client:
    image: client:local
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - api-gateway

  db:
    build: ./server/database
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: audioDB
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "mysql_data:/var/lib/mysql"
      - "audio-files:/shared"
    networks:
      - app-network

  api-gateway:
    build:
      context: ./server
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - streamservice
      - playlistservice
    networks:
      - app-network

  streamservice:
    build:
      context: ./server
      dockerfile: StreamService/Dockerfile
    image: server-streamservice:latest
    container_name: stream
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
    volumes:
      - "audio-files:/audio"
    networks:
      - app-network

  playlistservice:
    build:
      context: ./server
      dockerfile: PlaylistService/Dockerfile
    image: server-playlistservice:latest
    container_name: playlist
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
    networks:
      - app-network

  genai:
    build:
      context: ./genai
      dockerfile: Dockerfile
    image: genai-service-local
    container_name: genai_service
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - app-network

  announcementservice:
      build:
        context: ./server
        dockerfile: AnnouncementService/Dockerfile
      image: server-announcementservice:latest
      container_name: announcement
      expose:
        - "8080"
      depends_on:
        db:
          condition: service_healthy
      environment:
        SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
        SPRING_DATABASE_USERNAME: root
        SPRING_DATABASE_PASSWORD: root
        AUDIO_FILE_PATH: /audio
        GENAI_SERVICE_URL: http://genai:8000/generate_audio_transition
      volumes:
        - audio-files:/audio
      networks:
        - app-network

volumes:
  mysql_data:
  audio-files:

networks:
  app-network:
