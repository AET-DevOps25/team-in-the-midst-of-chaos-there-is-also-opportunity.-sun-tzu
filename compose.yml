services:
  client:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/client:latest
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - api-gateway

  downloader:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/downloader:latest
    environment:
      - BASIC_AUTH_USER=user
      - BASIC_AUTH_PASS=${BASIC_AUTH_PASS}
      - BASIC_AUTH_URL=https://ai-fm.dotan.de/
      - NUM_DOWNLOADS=50
    volumes:
      - audio-files:/audio
      - sql-files:/docker-entrypoint-initdb.d
    networks:
      - app-network

  db:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/db:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: audioDB
    depends_on:
      downloader:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
      - sql-files:/docker-entrypoint-initdb.d
    networks:
      - app-network

  api-gateway:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/api-gateway:latest
    ports:
      - "8080:8080"
    depends_on:
      - streamservice
      - playlistservice
    networks:
      - app-network

  streamservice:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/stream-service:latest
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
    volumes:
      - audio-files:/audio
    networks:
      - app-network

  playlistservice:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/playlist-service:latest
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
      ANNOUNCEMENT_SERVICE_URL: http://announcementservice:8080/announcement
    volumes:
      - audio-files:/audio
    networks:
      - app-network

  genai:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/genai-service:latest
    container_name: genai_service
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - app-network

  announcementservice:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/announcement-service:latest
    container_name: announcement
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
      GENAI_SERVICE_URL: http://genai:8000/generate_audio_transition
    volumes:
      - audio-files:/audio
    networks:
      - app-network

  prometheus:
    image: ghcr.io/aet-devops25/team-in-the-midst-of-chaos-there-is-also-opportunity-sun-tzu/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - app-network

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/grafana-dashboard:/var/lib/grafana/dashboards/DevOps
      - ./monitoring/grafana/grafana-provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    environment:
      - GF_LOG_LEVEL=warn
      - GF_USERS_DEFAULT_THEME=light
    networks:
      - app-network

volumes:
  mysql_data:
  sql-files:
  audio-files:
  prometheus_data:

networks:
  app-network:
