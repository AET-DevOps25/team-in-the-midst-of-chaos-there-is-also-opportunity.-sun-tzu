services:
  client:
    image: ghcr.io/aet-devops25/aifm/client:${VERSION:-latest}
    restart: unless-stopped
    ports:
      - 8080:80
    depends_on:
      - api-gateway

  downloader:
    image: ghcr.io/aet-devops25/aifm/downloader:${VERSION:-latest}
    environment:
      - USER=user
      - PASS=${DOWNLOAD_PASS}
      - URL=https://aifm-music.dotan.de
      - NUM_DOWNLOADS=50
    volumes:
      - audio-files:/audio
      - sql-files:/docker-entrypoint-initdb.d

  db:
    image: ghcr.io/aet-devops25/aifm/db:${VERSION:-latest}
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: audioDB
    depends_on:
      downloader:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
      - sql-files:/docker-entrypoint-initdb.d

  api-gateway:
    image: ghcr.io/aet-devops25/aifm/api-gateway:${VERSION:-latest}
    depends_on:
      - stream-service
      - playlist-service

  stream-service:
    image: ghcr.io/aet-devops25/aifm/stream-service:${VERSION:-latest}
    expose:
      - 8080
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
    volumes:
      - audio-files:/audio

  playlist-service:
    image: ghcr.io/aet-devops25/aifm/playlist-service:${VERSION:-latest}
    expose:
      - 8080
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
      ANNOUNCEMENT_SERVICE_URL: http://announcement-service:8080/announcement
    volumes:
      - audio-files:/audio

  genai-service:
    image: ghcr.io/aet-devops25/aifm/genai-service:${VERSION:-latest}
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}

  announcement-service:
    image: ghcr.io/aet-devops25/aifm/announcement-service:${VERSION:-latest}
    expose:
      - 8080
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATABASE_URL: jdbc:mysql://db:3306/audioDB
      SPRING_DATABASE_USERNAME: root
      SPRING_DATABASE_PASSWORD: root
      AUDIO_FILE_PATH: /audio
      GENAI_SERVICE_URL: http://genai-service:8000/generate_audio_transition
    volumes:
      - audio-files:/audio

  prometheus:
    image: ghcr.io/aet-devops25/aifm/prometheus:${VERSION:-latest}
    volumes:
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana-oss
    volumes:
      - grafana-dashboard:/var/lib/grafana/dashboards/DevOps
      - grafana-provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    environment:
      - GF_LOG_LEVEL=warn
      - GF_USERS_DEFAULT_THEME=light

volumes:
  mysql_data:
  sql-files:
  audio-files:
  prometheus_data:
  grafana-dashboard:
  grafana-provisioning:
